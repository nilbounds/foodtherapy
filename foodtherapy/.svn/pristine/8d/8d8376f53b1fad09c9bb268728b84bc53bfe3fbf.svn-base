package iijiaban.foodtherapy.ui.materialnavigation;

import ijiaban.foodtherapy.beans.Food;
import ijiaban.foodtherapy.dao.FoodDao;
import ijiaban.foodtherapy.utils.adapters.CommonViewAdapter;
import ijiaban.foodtherapy.utils.http.HttpUtil;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.TextView;

import com.iiijiaban.foodtherapy.R;
import com.squareup.picasso.Picasso;

public class FoodListActivity extends ActionBarActivity {

	private Toolbar mToolbar;
	private List<Food> foods = new ArrayList<Food>();
	private CommonViewAdapter adapter;
	private GridView gridview;
	private String myclass;// 大分类 barlist，menulist
	private int pageno = 1;// 页码
	private long smallclass;// 小分类id
	private boolean ishas = true;
	private boolean isloading = true;
	private String searchtype = "";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO 初始界面
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_foodlist);
		mToolbar = (Toolbar) findViewById(R.id.toolbar_actionbars);
		setSupportActionBar(mToolbar);
		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
		searchtype = getIntent().getStringExtra("searchtype");
		gridview = (GridView) findViewById(R.id.grid_food);
		
		myclass = getIntent().getStringExtra("myclass");
		smallclass = getIntent().getLongExtra("smallclass", 1);
		
		initAdapter();
		getData();
		gridview.setAdapter(adapter);
		gridview.setOnScrollListener(new OnScrollListener() {
			@Override
			public void onScrollStateChanged(AbsListView view, int scrollState) {
			}

			@Override
			public void onScroll(AbsListView view, int firstVisibleItem,
					int visibleItemCount, int totalItemCount) {
				// TODO 滚动加载
				if (firstVisibleItem + visibleItemCount == totalItemCount&&!isloading) {
					getData();
				}
			}
		});
		gridview.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				Intent intent = new Intent();
				intent.putExtra("id", foods.get(position).getId());
				intent.setClass(getApplicationContext(), DetailActivity.class);
				startActivity(intent);
			}
		});

	}

	void getData() {
		new AsyncTask<Void, Integer, List<Food>>() {
			@Override
			protected List<Food> doInBackground(Void... params) {
				// TODO 网络任务
				String url = "http://api.yi18.net/" + myclass + "?id="
						+ smallclass + "&page=" + pageno;
				List<Food> list = new ArrayList<Food>();
				try {
					String json = HttpUtil.getStringFromUrl(url);
					list = FoodDao.FoodJsonToList(json);
				} catch (IOException e) {
					// TODO 网络错误
					e.printStackTrace();
				}
				return list;
			}
			protected void onPreExecute() {
				isloading = true;
				super.onPreExecute();
			};

			protected void onPostExecute(List<Food> result) {
				foods.addAll(result);
				pageno += 1;
				isloading = false;
				adapter.refreshData(foods);
			};
		}.execute();
	}

	void initAdapter() {
		adapter = new CommonViewAdapter(foods, this) {
			@Override
			public View setView(View convertView, int position, ViewGroup parent) {
				// TODO 初始adapter
				ViewHolder viewholder;
				if (convertView == null) {
					viewholder = new ViewHolder();
 
					convertView = getLayoutInflater().inflate(R.layout.item_activity_foodlist, null);
					viewholder.imageview = (ImageView) convertView.findViewById(R.id.img_food);
					viewholder.text = (TextView) convertView.findViewById(R.id.txt_food);
 
					convertView.setTag(viewholder);
				} else {
					viewholder = (ViewHolder) convertView.getTag();
				}
				Picasso.with(common_context)
						.load(((Food) common_datas.get(position)).getImg())
						.into(viewholder.imageview);
				viewholder.text.setText(((Food) common_datas.get(position))
						.getName());
				return convertView;
			}

			@Override
			public long setItemId(int position) {
				return position;
			}
		};
	}

	static class ViewHolder {
		TextView text;
		ImageView imageview;
	}
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.main, menu);
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO 菜单

		switch (item.getItemId()) {
		case R.id.menu_search:
			Intent intent = new Intent(this, SearchActivity.class);
			searchtype = getIntent().getStringExtra("searchtype");
			intent.putExtra("searchtype", searchtype);
			startActivity(intent);
			break;
		case android.R.id.home:
			finish();
			break; 
		default:
			break;
		}
		return super.onOptionsItemSelected(item);

	}
}
